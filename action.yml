name: 'ioBroker Testing: Adapter tests'
author: 'AlCalzone'
#description: 'Greet someone'

inputs:
  node-version:
    description: 'Node.js version'
    required: true
  install-command:
    description: "Overwrite the default install command"
    default: "npm ci"
  package-cache:
    description: "Define which package manager to use for dependency caching. Set to 'false' to disable caching."
    default: 'npm'
  os:
    description: 'The operation system to use'
    required: true
  build:
    description: 'Set to true when the adapter needs a build step before testing'
    default: 'false'
  build-command: 
    description: 'Overwrite the default build command'
    default: 'npm run build'
  extra-tests:
    description: 'Add an additional command to run before the built-in tests'
    default: 'false'

# Conditional syntax isn't supported, but there are workarounds:
# https://github.com/actions/runner/issues/834#issuecomment-909921245

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: ${{ (inputs.package-cache != 'false' && inputs.package-cache != '') && inputs.package-cache || '' }}

    - name: Install Dependencies
      shell: bash
      run: ${{ inputs.install-command }}

    - name: Create a clean build
      shell: bash
      run: |
        if ${{ inputs.build }}; then
          ${{ inputs.build-command }}
        else
          echo "Skipping build step..."
        fi

    - name: Run additional tests
      shell: bash
      run: |
        if [[ "${{ inputs.extra-tests }}" == "false" ]] ; then
          echo "Skipping build step..."
        else
          ${{ inputs.extra-tests }}
        fi

    - name: Run unit tests
      shell: bash
      run: |
        if npm run | grep -q "test:unit" ; then
          echo "Unit test script found"
          npm run test:unit
        else
          echo "No unit tests defined, skipping..."
        fi

    - name: Run integration tests
      shell: bash
      run: npm run test:integration
      env:
        DEBUG: 'testing:*'
